{"version":3,"sources":["webpack:///./node_modules/rellax/rellax.js","webpack:///./src/utils/useOpacityScroll.js"],"names":["window","Rellax","el","options","self","Object","create","prototype","posY","screenY","posX","screenX","blocks","pause","loop","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","callback","setTimeout","loopId","supportsPassive","opts","defineProperty","get","addEventListener","removeEventListener","e","clearLoop","cancelAnimationFrame","mozCancelAnimationFrame","clearTimeout","transformProp","testEl","document","createElement","style","transform","vendors","vendor","undefined","speed","verticalSpeed","horizontalSpeed","breakpoints","center","wrapper","relativeToWrapper","round","vertical","horizontal","verticalScrollAxis","horizontalScrollAxis","keys","forEach","key","length","Array","isArray","lastVal","isAscending","isNumerical","i","console","warn","validateCustomBreakpoints","elements","querySelectorAll","elems","nodeType","querySelector","currentBreakpoint","init","cssText","w","bp","innerHeight","innerWidth","setPosition","block","createBlock","push","cacheBlocks","animate","update","mapBreakpoints","dataPercentage","getAttribute","dataSpeed","dataXsSpeed","dataMobileSpeed","dataTabletSpeed","dataDesktopSpeed","dataVerticalSpeed","dataHorizontalSpeed","dataVericalScrollAxis","dataHorizontalScrollAxis","dataZindex","dataMin","dataMax","dataMinX","dataMaxX","dataMinY","dataMaxY","wrapperPosY","scrollTop","pageYOffset","documentElement","body","offsetTop","scrollLeft","pageXOffset","blockTop","getBoundingClientRect","top","blockHeight","clientHeight","offsetHeight","scrollHeight","blockLeft","left","blockWidth","clientWidth","offsetWidth","scrollWidth","percentageY","percentageX","Number","bases","updatePosition","searchResult","exec","index","trimmedStyle","slice","delimiter","indexOf","replace","baseX","x","baseY","y","height","width","zindex","min","max","minX","maxX","minY","maxY","oldY","oldX","parentNode","scrollPosY","result","valueX","valueY","Math","deferredUpdate","passive","positions","toLowerCase","verticalScrollX","verticalScrollY","horizontalScrollX","positionY","positionX","translate","destroy","refresh","useOpacityScroll","ref","useState","opacity","setOpacity","opacityChange","current","useEffect"],"mappings":"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","file":"c6cff7b013ac54156d349b64378eb99612e462a0-27e8902c5e098b7cf116.js","sourcesContent":["require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\n// ------------------------------------------\n// Rellax.js\n// Buttery smooth parallax library\n// Copyright (c) 2016 Moe Amaya (@moeamaya)\n// MIT license\n//\n// Thanks to Paraxify.js and Jaime Cabllero\n// for parallax concepts\n// ------------------------------------------\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.Rellax = factory();\n  }\n})(typeof window !== \"undefined\" ? window : global, function () {\n  var Rellax = function Rellax(el, options) {\n    \"use strict\";\n\n    var self = Object.create(Rellax.prototype);\n    var posY = 0;\n    var screenY = 0;\n    var posX = 0;\n    var screenX = 0;\n    var blocks = [];\n    var pause = true; // check what requestAnimationFrame to use, and if\n    // it's not supported, use the onscroll event\n\n    var loop = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function (callback) {\n      return setTimeout(callback, 1000 / 60);\n    }; // store the id for later use\n\n\n    var loopId = null; // Test via a getter in the options object to see if the passive property is accessed\n\n    var supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          supportsPassive = true;\n        }\n      });\n      window.addEventListener(\"testPassive\", null, opts);\n      window.removeEventListener(\"testPassive\", null, opts);\n    } catch (e) {} // check what cancelAnimation method to use\n\n\n    var clearLoop = window.cancelAnimationFrame || window.mozCancelAnimationFrame || clearTimeout; // check which transform property to use\n\n    var transformProp = window.transformProp || function () {\n      var testEl = document.createElement('div');\n\n      if (testEl.style.transform === null) {\n        var vendors = ['Webkit', 'Moz', 'ms'];\n\n        for (var vendor in vendors) {\n          if (testEl.style[vendors[vendor] + 'Transform'] !== undefined) {\n            return vendors[vendor] + 'Transform';\n          }\n        }\n      }\n\n      return 'transform';\n    }(); // Default Settings\n\n\n    self.options = {\n      speed: -2,\n      verticalSpeed: null,\n      horizontalSpeed: null,\n      breakpoints: [576, 768, 1201],\n      center: false,\n      wrapper: null,\n      relativeToWrapper: false,\n      round: true,\n      vertical: true,\n      horizontal: false,\n      verticalScrollAxis: \"y\",\n      horizontalScrollAxis: \"x\",\n      callback: function callback() {}\n    }; // User defined options (might have more in the future)\n\n    if (options) {\n      Object.keys(options).forEach(function (key) {\n        self.options[key] = options[key];\n      });\n    }\n\n    function validateCustomBreakpoints() {\n      if (self.options.breakpoints.length === 3 && Array.isArray(self.options.breakpoints)) {\n        var isAscending = true;\n        var isNumerical = true;\n        var lastVal;\n        self.options.breakpoints.forEach(function (i) {\n          if (typeof i !== 'number') isNumerical = false;\n\n          if (lastVal !== null) {\n            if (i < lastVal) isAscending = false;\n          }\n\n          lastVal = i;\n        });\n        if (isAscending && isNumerical) return;\n      } // revert defaults if set incorrectly\n\n\n      self.options.breakpoints = [576, 768, 1201];\n      console.warn(\"Rellax: You must pass an array of 3 numbers in ascending order to the breakpoints option. Defaults reverted\");\n    }\n\n    if (options && options.breakpoints) {\n      validateCustomBreakpoints();\n    } // By default, rellax class\n\n\n    if (!el) {\n      el = '.rellax';\n    } // check if el is a className or a node\n\n\n    var elements = typeof el === 'string' ? document.querySelectorAll(el) : [el]; // Now query selector\n\n    if (elements.length > 0) {\n      self.elems = elements;\n    } // The elements don't exist\n    else {\n        console.warn(\"Rellax: The elements you're trying to select don't exist.\");\n        return;\n      } // Has a wrapper and it exists\n\n\n    if (self.options.wrapper) {\n      if (!self.options.wrapper.nodeType) {\n        var wrapper = document.querySelector(self.options.wrapper);\n\n        if (wrapper) {\n          self.options.wrapper = wrapper;\n        } else {\n          console.warn(\"Rellax: The wrapper you're trying to use doesn't exist.\");\n          return;\n        }\n      }\n    } // set a placeholder for the current breakpoint\n\n\n    var currentBreakpoint; // helper to determine current breakpoint\n\n    var getCurrentBreakpoint = function getCurrentBreakpoint(w) {\n      var bp = self.options.breakpoints;\n      if (w < bp[0]) return 'xs';\n      if (w >= bp[0] && w < bp[1]) return 'sm';\n      if (w >= bp[1] && w < bp[2]) return 'md';\n      return 'lg';\n    }; // Get and cache initial position of all elements\n\n\n    var cacheBlocks = function cacheBlocks() {\n      for (var i = 0; i < self.elems.length; i++) {\n        var block = createBlock(self.elems[i]);\n        blocks.push(block);\n      }\n    }; // Let's kick this script off\n    // Build array for cached element values\n\n\n    var init = function init() {\n      for (var i = 0; i < blocks.length; i++) {\n        self.elems[i].style.cssText = blocks[i].style;\n      }\n\n      blocks = [];\n      screenY = window.innerHeight;\n      screenX = window.innerWidth;\n      currentBreakpoint = getCurrentBreakpoint(screenX);\n      setPosition();\n      cacheBlocks();\n      animate(); // If paused, unpause and set listener for window resizing events\n\n      if (pause) {\n        window.addEventListener('resize', init);\n        pause = false; // Start the loop\n\n        update();\n      }\n    }; // We want to cache the parallax blocks'\n    // values: base, top, height, speed\n    // el: is dom object, return: el cache values\n\n\n    var createBlock = function createBlock(el) {\n      var dataPercentage = el.getAttribute('data-rellax-percentage');\n      var dataSpeed = el.getAttribute('data-rellax-speed');\n      var dataXsSpeed = el.getAttribute('data-rellax-xs-speed');\n      var dataMobileSpeed = el.getAttribute('data-rellax-mobile-speed');\n      var dataTabletSpeed = el.getAttribute('data-rellax-tablet-speed');\n      var dataDesktopSpeed = el.getAttribute('data-rellax-desktop-speed');\n      var dataVerticalSpeed = el.getAttribute('data-rellax-vertical-speed');\n      var dataHorizontalSpeed = el.getAttribute('data-rellax-horizontal-speed');\n      var dataVericalScrollAxis = el.getAttribute('data-rellax-vertical-scroll-axis');\n      var dataHorizontalScrollAxis = el.getAttribute('data-rellax-horizontal-scroll-axis');\n      var dataZindex = el.getAttribute('data-rellax-zindex') || 0;\n      var dataMin = el.getAttribute('data-rellax-min');\n      var dataMax = el.getAttribute('data-rellax-max');\n      var dataMinX = el.getAttribute('data-rellax-min-x');\n      var dataMaxX = el.getAttribute('data-rellax-max-x');\n      var dataMinY = el.getAttribute('data-rellax-min-y');\n      var dataMaxY = el.getAttribute('data-rellax-max-y');\n      var mapBreakpoints;\n      var breakpoints = true;\n\n      if (!dataXsSpeed && !dataMobileSpeed && !dataTabletSpeed && !dataDesktopSpeed) {\n        breakpoints = false;\n      } else {\n        mapBreakpoints = {\n          'xs': dataXsSpeed,\n          'sm': dataMobileSpeed,\n          'md': dataTabletSpeed,\n          'lg': dataDesktopSpeed\n        };\n      } // initializing at scrollY = 0 (top of browser), scrollX = 0 (left of browser)\n      // ensures elements are positioned based on HTML layout.\n      //\n      // If the element has the percentage attribute, the posY and posX needs to be\n      // the current scroll position's value, so that the elements are still positioned based on HTML layout\n\n\n      var wrapperPosY = self.options.wrapper ? self.options.wrapper.scrollTop : window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop; // If the option relativeToWrapper is true, use the wrappers offset to top, subtracted from the current page scroll.\n\n      if (self.options.relativeToWrapper) {\n        var scrollPosY = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n        wrapperPosY = scrollPosY - self.options.wrapper.offsetTop;\n      }\n\n      var posY = self.options.vertical ? dataPercentage || self.options.center ? wrapperPosY : 0 : 0;\n      var posX = self.options.horizontal ? dataPercentage || self.options.center ? self.options.wrapper ? self.options.wrapper.scrollLeft : window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft : 0 : 0;\n      var blockTop = posY + el.getBoundingClientRect().top;\n      var blockHeight = el.clientHeight || el.offsetHeight || el.scrollHeight;\n      var blockLeft = posX + el.getBoundingClientRect().left;\n      var blockWidth = el.clientWidth || el.offsetWidth || el.scrollWidth; // apparently parallax equation everyone uses\n\n      var percentageY = dataPercentage ? dataPercentage : (posY - blockTop + screenY) / (blockHeight + screenY);\n      var percentageX = dataPercentage ? dataPercentage : (posX - blockLeft + screenX) / (blockWidth + screenX);\n\n      if (self.options.center) {\n        percentageX = 0.5;\n        percentageY = 0.5;\n      } // Optional individual block speed as data attr, otherwise global speed\n\n\n      var speed = breakpoints && mapBreakpoints[currentBreakpoint] !== null ? Number(mapBreakpoints[currentBreakpoint]) : dataSpeed ? dataSpeed : self.options.speed;\n      var verticalSpeed = dataVerticalSpeed ? dataVerticalSpeed : self.options.verticalSpeed;\n      var horizontalSpeed = dataHorizontalSpeed ? dataHorizontalSpeed : self.options.horizontalSpeed; // Optional individual block movement axis direction as data attr, otherwise gobal movement direction\n\n      var verticalScrollAxis = dataVericalScrollAxis ? dataVericalScrollAxis : self.options.verticalScrollAxis;\n      var horizontalScrollAxis = dataHorizontalScrollAxis ? dataHorizontalScrollAxis : self.options.horizontalScrollAxis;\n      var bases = updatePosition(percentageX, percentageY, speed, verticalSpeed, horizontalSpeed); // ~~Store non-translate3d transforms~~\n      // Store inline styles and extract transforms\n\n      var style = el.style.cssText;\n      var transform = ''; // Check if there's an inline styled transform\n\n      var searchResult = /transform\\s*:/i.exec(style);\n\n      if (searchResult) {\n        // Get the index of the transform\n        var index = searchResult.index; // Trim the style to the transform point and get the following semi-colon index\n\n        var trimmedStyle = style.slice(index);\n        var delimiter = trimmedStyle.indexOf(';'); // Remove \"transform\" string and save the attribute\n\n        if (delimiter) {\n          transform = \" \" + trimmedStyle.slice(11, delimiter).replace(/\\s/g, '');\n        } else {\n          transform = \" \" + trimmedStyle.slice(11).replace(/\\s/g, '');\n        }\n      }\n\n      return {\n        baseX: bases.x,\n        baseY: bases.y,\n        top: blockTop,\n        left: blockLeft,\n        height: blockHeight,\n        width: blockWidth,\n        speed: speed,\n        verticalSpeed: verticalSpeed,\n        horizontalSpeed: horizontalSpeed,\n        verticalScrollAxis: verticalScrollAxis,\n        horizontalScrollAxis: horizontalScrollAxis,\n        style: style,\n        transform: transform,\n        zindex: dataZindex,\n        min: dataMin,\n        max: dataMax,\n        minX: dataMinX,\n        maxX: dataMaxX,\n        minY: dataMinY,\n        maxY: dataMaxY\n      };\n    }; // set scroll position (posY, posX)\n    // side effect method is not ideal, but okay for now\n    // returns true if the scroll changed, false if nothing happened\n\n\n    var setPosition = function setPosition() {\n      var oldY = posY;\n      var oldX = posX;\n      posY = self.options.wrapper ? self.options.wrapper.scrollTop : (document.documentElement || document.body.parentNode || document.body).scrollTop || window.pageYOffset;\n      posX = self.options.wrapper ? self.options.wrapper.scrollLeft : (document.documentElement || document.body.parentNode || document.body).scrollLeft || window.pageXOffset; // If option relativeToWrapper is true, use relative wrapper value instead.\n\n      if (self.options.relativeToWrapper) {\n        var scrollPosY = (document.documentElement || document.body.parentNode || document.body).scrollTop || window.pageYOffset;\n        posY = scrollPosY - self.options.wrapper.offsetTop;\n      }\n\n      if (oldY != posY && self.options.vertical) {\n        // scroll changed, return true\n        return true;\n      }\n\n      if (oldX != posX && self.options.horizontal) {\n        // scroll changed, return true\n        return true;\n      } // scroll did not change\n\n\n      return false;\n    }; // Ahh a pure function, gets new transform value\n    // based on scrollPosition and speed\n    // Allow for decimal pixel values\n\n\n    var updatePosition = function updatePosition(percentageX, percentageY, speed, verticalSpeed, horizontalSpeed) {\n      var result = {};\n      var valueX = (horizontalSpeed ? horizontalSpeed : speed) * (100 * (1 - percentageX));\n      var valueY = (verticalSpeed ? verticalSpeed : speed) * (100 * (1 - percentageY));\n      result.x = self.options.round ? Math.round(valueX) : Math.round(valueX * 100) / 100;\n      result.y = self.options.round ? Math.round(valueY) : Math.round(valueY * 100) / 100;\n      return result;\n    }; // Remove event listeners and loop again\n\n\n    var deferredUpdate = function deferredUpdate() {\n      window.removeEventListener('resize', deferredUpdate);\n      window.removeEventListener('orientationchange', deferredUpdate);\n      (self.options.wrapper ? self.options.wrapper : window).removeEventListener('scroll', deferredUpdate);\n      (self.options.wrapper ? self.options.wrapper : document).removeEventListener('touchmove', deferredUpdate); // loop again\n\n      loopId = loop(update);\n    }; // Loop\n\n\n    var update = function update() {\n      if (setPosition() && pause === false) {\n        animate(); // loop again\n\n        loopId = loop(update);\n      } else {\n        loopId = null; // Don't animate until we get a position updating event\n\n        window.addEventListener('resize', deferredUpdate);\n        window.addEventListener('orientationchange', deferredUpdate);\n        (self.options.wrapper ? self.options.wrapper : window).addEventListener('scroll', deferredUpdate, supportsPassive ? {\n          passive: true\n        } : false);\n        (self.options.wrapper ? self.options.wrapper : document).addEventListener('touchmove', deferredUpdate, supportsPassive ? {\n          passive: true\n        } : false);\n      }\n    }; // Transform3d on parallax element\n\n\n    var animate = function animate() {\n      var positions;\n\n      for (var i = 0; i < self.elems.length; i++) {\n        // Determine relevant movement directions\n        var verticalScrollAxis = blocks[i].verticalScrollAxis.toLowerCase();\n        var horizontalScrollAxis = blocks[i].horizontalScrollAxis.toLowerCase();\n        var verticalScrollX = verticalScrollAxis.indexOf(\"x\") != -1 ? posY : 0;\n        var verticalScrollY = verticalScrollAxis.indexOf(\"y\") != -1 ? posY : 0;\n        var horizontalScrollX = horizontalScrollAxis.indexOf(\"x\") != -1 ? posX : 0;\n        var horizontalScrollY = horizontalScrollAxis.indexOf(\"y\") != -1 ? posX : 0;\n        var percentageY = (verticalScrollY + horizontalScrollY - blocks[i].top + screenY) / (blocks[i].height + screenY);\n        var percentageX = (verticalScrollX + horizontalScrollX - blocks[i].left + screenX) / (blocks[i].width + screenX); // Subtracting initialize value, so element stays in same spot as HTML\n\n        positions = updatePosition(percentageX, percentageY, blocks[i].speed, blocks[i].verticalSpeed, blocks[i].horizontalSpeed);\n        var positionY = positions.y - blocks[i].baseY;\n        var positionX = positions.x - blocks[i].baseX; // The next two \"if\" blocks go like this:\n        // Check if a limit is defined (first \"min\", then \"max\");\n        // Check if we need to change the Y or the X\n        // (Currently working only if just one of the axes is enabled)\n        // Then, check if the new position is inside the allowed limit\n        // If so, use new position. If not, set position to limit.\n        // Check if a min limit is defined\n\n        if (blocks[i].min !== null) {\n          if (self.options.vertical && !self.options.horizontal) {\n            positionY = positionY <= blocks[i].min ? blocks[i].min : positionY;\n          }\n\n          if (self.options.horizontal && !self.options.vertical) {\n            positionX = positionX <= blocks[i].min ? blocks[i].min : positionX;\n          }\n        } // Check if directional min limits are defined\n\n\n        if (blocks[i].minY != null) {\n          positionY = positionY <= blocks[i].minY ? blocks[i].minY : positionY;\n        }\n\n        if (blocks[i].minX != null) {\n          positionX = positionX <= blocks[i].minX ? blocks[i].minX : positionX;\n        } // Check if a max limit is defined\n\n\n        if (blocks[i].max !== null) {\n          if (self.options.vertical && !self.options.horizontal) {\n            positionY = positionY >= blocks[i].max ? blocks[i].max : positionY;\n          }\n\n          if (self.options.horizontal && !self.options.vertical) {\n            positionX = positionX >= blocks[i].max ? blocks[i].max : positionX;\n          }\n        } // Check if directional max limits are defined\n\n\n        if (blocks[i].maxY != null) {\n          positionY = positionY >= blocks[i].maxY ? blocks[i].maxY : positionY;\n        }\n\n        if (blocks[i].maxX != null) {\n          positionX = positionX >= blocks[i].maxX ? blocks[i].maxX : positionX;\n        }\n\n        var zindex = blocks[i].zindex; // Move that element\n        // (Set the new translation and append initial inline transforms.)\n\n        var translate = 'translate3d(' + (self.options.horizontal ? positionX : '0') + 'px,' + (self.options.vertical ? positionY : '0') + 'px,' + zindex + 'px) ' + blocks[i].transform;\n        self.elems[i].style[transformProp] = translate;\n      }\n\n      self.options.callback(positions);\n    };\n\n    self.destroy = function () {\n      for (var i = 0; i < self.elems.length; i++) {\n        self.elems[i].style.cssText = blocks[i].style;\n      } // Remove resize event listener if not pause, and pause\n\n\n      if (!pause) {\n        window.removeEventListener('resize', init);\n        pause = true;\n      } // Clear the animation loop to prevent possible memory leak\n\n\n      clearLoop(loopId);\n      loopId = null;\n    }; // Init\n\n\n    init(); // Allow to recalculate the initial values whenever we want\n\n    self.refresh = init;\n    return self;\n  };\n\n  return Rellax;\n});","import { useEffect, useState } from 'react';\nimport Rellax from 'rellax';\n\nfunction useOpacityScroll(ref) {\n  const [opacity, setOpacity] = useState(1);\n\n  const opacityChange = () => {\n    const scrollTop = window.pageYOffset;\n    const height = ref.current.offsetHeight / 4;\n    const opacity = 1 - (scrollTop - height) / scrollTop * 1.5;\n\n    if (scrollTop >= height) {\n      setOpacity(opacity > 0 ? opacity : 0);\n    } else {\n      setOpacity(1);\n    }\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-vars\n    const rellax = new Rellax(ref.current, {\n      speed: -4,\n    });\n  }, [ref]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', opacityChange);\n    window.addEventListener('resize', opacityChange);\n\n    return () => {\n      window.removeEventListener('scroll', opacityChange);\n      window.removeEventListener('resize', opacityChange);\n    };\n  });\n\n  return opacity;\n}\n\nexport default useOpacityScroll;\n"],"sourceRoot":""}