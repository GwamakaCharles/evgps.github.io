{"version":3,"sources":["webpack:///./src/pages/getty-images.js","webpack:///./src/images/projects/getty-images/mast.jpg"],"names":["GettyImagesPage","details","home","homeJapan","homepageOne","homepageTwo","mosaic","data","path","useContext","TransitionContext","link","transitionElement","TransitionLink","allFile","edges","forEach","image","node","name","childImageSharp","fluid","title","mastImage","pathname","header","to","className","projectQuery","module","exports"],"mappings":"iQAwGeA,UA9Ff,YAA0C,IAIpCC,EAASC,EAAMC,EAAWC,EAAaC,EAAaC,EAJ/BC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAAQ,EACHC,qBAAWC,KAAvCC,EAD+B,EAC/BA,KAAMC,EADyB,EACzBA,kBAERC,EAAiBF,EA6BvB,OA1BAJ,EAAKO,QAAQC,MAAMC,SAAQ,SAAAC,GACzB,IAAMC,EAAOD,EAAMC,KAGnB,OAAQA,EAAKC,MACX,IAAK,iBACHlB,EAAUiB,EAAKE,gBAAgBC,MAC/B,MACF,IAAK,OACHnB,EAAOgB,EAAKE,gBAAgBC,MAC5B,MACF,IAAK,UACHlB,EAAYe,EAAKE,gBAAgBC,MACjC,MACF,IAAK,aACHjB,EAAcc,EAAKE,gBAAgBC,MACnC,MACF,IAAK,aACHhB,EAAca,EAAKE,gBAAgBC,MACnC,MACF,IAAK,gBACHf,EAASY,EAAKE,gBAAgBC,UAMlC,kBAAC,IAAD,CACEC,MAAM,eACNL,MAAOM,IACPC,SAAUhB,GAEV,kBAAC,IAAD,CAASiB,OAAO,gCACd,4VAIgB,kBAACZ,EAAD,CAAgBa,GAAG,kCACjCd,kBAAmBA,GADL,gBAJhB,kCASF,yBAAKe,UAAU,0CACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAASV,MAAOb,MAIpB,yBAAKuB,UAAU,4BACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,mBACb,6BACE,kBAAC,IAAD,CAASV,MAAOX,KAElB,6BACE,kBAAC,IAAD,CAASW,MAAOhB,QAMxB,yBAAK0B,UAAU,yCACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAASV,MAAOZ,MAIpB,yBAAKsB,UAAU,4BACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,mBACb,6BACE,kBAAC,IAAD,CAASV,MAAOf,KAElB,6BACE,kBAAC,IAAD,CAASe,MAAOd,UAgBvB,IAAMyB,EAAY,Y,qBC1GzBC,EAAOC,QAAU,IAA0B","file":"component---src-pages-getty-images-js-ad4f68b70bf27b4615d6.js","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Project from '../templates/Project';\nimport TransitionContext from '../templates/Context';\nimport Browser from '../components/Browser';\nimport Content from '../components/Content';\n\nimport mastImage from '../images/projects/getty-images/mast.jpg';\n\nfunction GettyImagesPage({ data, path }) {\n  const { link, transitionElement } = useContext(TransitionContext);\n\n  const TransitionLink = link;\n  let details, home, homeJapan, homepageOne, homepageTwo, mosaic;\n\n  data.allFile.edges.forEach(image => {\n    const node = image.node;\n\n    // eslint-disable-next-line default-case\n    switch (node.name) {\n      case 'details-filter':\n        details = node.childImageSharp.fluid;\n        break;\n      case 'home':\n        home = node.childImageSharp.fluid;\n        break;\n      case 'home-jp':\n        homeJapan = node.childImageSharp.fluid;\n        break;\n      case 'homepage-1':\n        homepageOne = node.childImageSharp.fluid;\n        break;\n      case 'homepage-2':\n        homepageTwo = node.childImageSharp.fluid;\n        break;\n      case 'mosaic-filter':\n        mosaic = node.childImageSharp.fluid;\n        break;\n    }\n  });\n\n  return (\n    <Project\n      title=\"Getty Images\"\n      image={mastImage}\n      pathname={path}\n    >\n      <Content header=\"Moving the world with images\">\n        <p>\n          The new Getty Images website was a complete redesign of an already established brand. There was a\n          concerted effort to focus on building and growing the creative visual media side of the company. The\n          redesign was split between several developers on different teams, but I was able bring new practices and\n          techniques to <TransitionLink to=\"/2018/10/getty-images-homepage/\"\n          transitionElement={transitionElement}>the homepage</TransitionLink> and the search results page.\n        </p>\n      </Content>\n\n      <div className=\"section-padding bg-getty-images--alpha\">\n        <div className=\"grid\">\n          <Browser image={homepageOne} />\n        </div>\n      </div>\n\n      <div className=\"section-padding bg-white\">\n        <div className=\"grid\">\n          <div className=\"project__double\">\n            <div>\n              <Browser image={mosaic} />\n            </div>\n            <div>\n              <Browser image={details} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"section-padding bg-getty-images--beta\">\n        <div className=\"grid\">\n          <Browser image={homepageTwo} />\n        </div>\n      </div>\n\n      <div className=\"section-padding bg-white\">\n        <div className=\"grid\">\n          <div className=\"project__double\">\n            <div>\n              <Browser image={home} />\n            </div>\n            <div>\n              <Browser image={homeJapan} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Project>\n  );\n}\n\nGettyImagesPage.propTypes = {\n  data: PropTypes.object.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default GettyImagesPage;\n\nexport const projectQuery = graphql`\n  query GettyImagesQuery {\n    allFile(filter: {\n        extension: { regex: \"/(jpg)/\" }\n        relativeDirectory: {eq: \"projects/getty-images\"}\n    }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxWidth: 1400) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/mast-94f406903596da098b403911ff5d60a3.jpg\";"],"sourceRoot":""}