{"version":3,"sources":["webpack:///./src/images/projects/using-reinforcement-learning-for-algorithm-trading/mast.jpg","webpack:///./src/pages/using-reinforcement-learning-for-algorithm-trading.js"],"names":["module","exports","ArtByElinaPage","about","gallery","home","menuOne","data","path","allFile","edges","forEach","image","node","name","childImageSharp","fluid","title","mastImage","pathname","header","href","target","rel","className","projectQuery"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,oD,kLC2E5BC,UAlEf,YAAyC,IACnCC,EAAOC,EAASC,EAAMC,EADFC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAiB9B,OAdAD,EAAKE,QAAQC,MAAMC,SAAQ,SAAAC,GACzB,IAAMC,EAAOD,EAAMC,KAED,UAAdA,EAAKC,KACPX,EAAQU,EAAKE,gBAAgBC,MACN,YAAdH,EAAKC,KACdV,EAAUS,EAAKE,gBAAgBC,MACR,SAAdH,EAAKC,KACdT,EAAOQ,EAAKE,gBAAgBC,MACL,WAAdH,EAAKC,OACdR,EAAUO,EAAKE,gBAAgBC,UAKjC,kBAAC,IAAD,CACEC,MAAM,qDACNL,MAAOM,IACPC,SAAUX,GAEV,kBAAC,IAAD,CAASY,OAAO,sBACd,qOAGE,uBAAGC,KAAK,4BAA4BC,OAAO,SAASC,IAAI,uBAAxD,iBAHF,+HASF,yBAAKC,UAAU,gCACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAASZ,MAAON,MAIpB,yBAAKkB,UAAU,4BACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,mBACb,6BACE,kBAAC,IAAD,CAASZ,MAAOP,KAElB,6BACE,kBAAC,IAAD,CAASO,MAAOT,QAMxB,yBAAKqB,UAAU,gCACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAASZ,MAAOR,QAcnB,IAAMqB,EAAY","file":"component---src-pages-using-reinforcement-learning-for-algorithm-trading-js-5bf89db119adf4a8b781.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/mast-227c218e5c903b0ac6e72dec251e02f4.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Project from '../templates/Project';\nimport Browser from '../components/Browser';\nimport Content from '../components/Content';\n\nimport mastImage from '../images/projects/using-reinforcement-learning-for-algorithm-trading/mast.jpg';\n\nfunction ArtByElinaPage({ data, path }) {\n  let about, gallery, home, menuOne;\n\n  data.allFile.edges.forEach(image => {\n    const node = image.node;\n\n    if (node.name === 'about') {\n      about = node.childImageSharp.fluid;\n    } else if (node.name === 'gallery') {\n      gallery = node.childImageSharp.fluid;\n    } else if (node.name === 'home') {\n      home = node.childImageSharp.fluid;\n    } else if (node.name === 'menu-1') {\n      menuOne = node.childImageSharp.fluid;\n    }\n  });\n\n  return (\n    <Project\n      title=\"Using Reinforcement Learning for Algorithm Trading\"\n      image={mastImage}\n      pathname={path}\n    >\n      <Content header=\"Inspired paintings\">\n        <p>\n          Elina Dmitruk is a fine artist using oil paints to create inspired paintings both realistic and imaginary.\n          She needed a website to tell her story and showcase her work. I partnered with Mary Rauzi at\n          <a href=\"https://embrcreative.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Embr Creative</a>, who\n          redesigned the website, while I handled the redevelopment of a generic Squarespace page to a custom WordPress\n          build.\n        </p>\n      </Content>\n\n      <div className=\"section-padding bg-lightgrey\">\n        <div className=\"grid\">\n          <Browser image={menuOne} />\n        </div>\n      </div>\n\n      <div className=\"section-padding bg-white\">\n        <div className=\"grid\">\n          <div className=\"project__double\">\n            <div>\n              <Browser image={home} />\n            </div>\n            <div>\n              <Browser image={about} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"section-padding bg-lightgrey\">\n        <div className=\"grid\">\n          <Browser image={gallery} />\n        </div>\n      </div>\n    </Project>\n  );\n}\n\nArtByElinaPage.propTypes = {\n  data: PropTypes.object.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default ArtByElinaPage;\n\nexport const projectQuery = graphql`\n  query ArtByElinaQuery {\n    allFile(filter: {\n        extension: { regex: \"/(jpg)/\" }\n        relativeDirectory: {eq: \"projects/using-reinforcement-learning-for-algorithm-trading\"}\n    }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxWidth: 1400) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}